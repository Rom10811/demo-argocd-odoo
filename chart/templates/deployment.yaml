# templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.client.name }}-odoo
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.client.name }}-odoo
    client: {{ .Values.client.name }}
    component: odoo
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ .Values.client.name }}-odoo
      client: {{ .Values.client.name }}
      component: odoo
  template:
    metadata:
      labels:
        app: {{ .Values.client.name }}-odoo
        client: {{ .Values.client.name }}
        component: odoo
    spec:
      containers:
        - name: odoo
          image: "{{ .Values.image.repository_name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: 8069
              protocol: TCP
          env:
            # CloudNativePG - Connexion via le service du cluster
            - name: POSTGRES_HOST
              value: {{ .Values.client.name }}-postgres-rw  # Service read-write CloudNativePG
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: {{ .Values.client.name }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.client.name }}-postgres-app  # Secret généré par CloudNativePG
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.client.name }}-postgres-app  # Secret généré par CloudNativePG
                  key: password
            # Optionnel: URL complète de connexion PostgreSQL
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.client.name }}-postgres-app
                  key: uri
          volumeMounts:
            - name: filestore
              mountPath: /var/lib/odoo/filestore
            - name: addons
              mountPath: /mnt/extra-addons
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: filestore
          persistentVolumeClaim:
            claimName: {{ .Values.client.name }}-odoo-filestore
        - name: addons
          configMap:
            name: {{ .Values.client.name }}-odoo-addons
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
