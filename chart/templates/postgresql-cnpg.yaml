# templates/postgresql-cnpg.yaml
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ .Values.client.name }}-postgres
  namespace: {{ .Release.Namespace }}
spec:
  instances: {{ .Values.postgres.cluster.instances | default 2 }}

  # ✅ Version PostgreSQL 16
  imageName: ghcr.io/cloudnative-pg/postgresql:16

  # ✅ Bootstrap avec création de l'utilisateur odoo
  bootstrap:
    initdb:
      database: {{ .Values.client.name }}
      owner: odoo
      secret:
        name: {{ .Values.client.name }}-postgres-app  # ✅ Ce secret sera créé automatiquement
      encoding: UTF8
      localeCollate: C
      localeCType: C
      # ✅ Script post-init pour configurer l'utilisateur odoo
      postInitApplicationSQL:
        - "ALTER USER odoo WITH SUPERUSER;"

  storage:
    size: {{ .Values.postgres.cluster.storage.size | default "20Gi" }}
    {{- if .Values.postgres.cluster.storage.storageClass }}
    storageClass: {{ .Values.postgres.cluster.storage.storageClass }}
    {{- end }}

  postgresql:
    parameters:
      max_connections: "200"
      shared_buffers: "128MB"
      effective_cache_size: "512MB"

  resources:
    {{- toYaml .Values.postgres.resources | nindent 4 }}

---
# ✅ Secret manuel pour l'utilisateur odoo (au cas où)
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.client.name }}-postgres-app
  namespace: {{ .Release.Namespace }}
type: kubernetes.io/basic-auth
data:
  username: {{ "odoo" | b64enc }}
  password: {{ "odoo123" | b64enc }}
  dbname: {{ .Values.client.name | b64enc }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.client.name }}-postgres-superuser
  namespace: {{ .Release.Namespace }}
type: kubernetes.io/basic-auth
data:
  username: {{ "postgres" | b64enc }}
  password: {{ "postgres123" | b64enc }}