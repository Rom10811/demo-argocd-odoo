apiVersion: apps/v1
kind: Deployment
metadata:
  name: odoo-{{ .Values.client.name }}
  namespace: {{ .Values.client.namespace | default .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: odoo
      client: {{ .Values.client.name }}
  template:
    metadata:
      labels:
        app: odoo
        client: {{ .Values.client.name }}
    spec:
      # Attendre que PostgreSQL soit prêt
      initContainers:
        - name: odoo-db-init
          image: odoo:18.0
          securityContext:
            runAsUser: 104  # UID de l'utilisateur odoo dans l'image
            runAsGroup: 107 # GID du groupe odoo
            runAsNonRoot: true
          env:
            - name: DB_NAME
              value: "{{ .Values.database.name }}"
            - name: HOST
              value: postgresql-service.argocd.svc.cluster.local
            - name: USER
              value: odoo
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: postgres-password
          command:
            - /bin/bash
            - -c
            - |
              echo "Initialisation de la base de données ${DB_NAME}..."
              /usr/bin/odoo -d "${DB_NAME}" -i base --no-xmlrpc --stop-after-init \
                --db_host=${HOST} --db_user=${USER} --db_password=${PASSWORD}
              echo "Base de données ${DB_NAME} initialisée avec succès !"
          volumeMounts:
            - name: odoo-config
              mountPath: /etc/odoo/odoo.conf
              subPath: odoo.conf
            - name: odoo-data
              mountPath: /var/lib/odoo
      containers:
        - name: odoo
          image: "{{ .Values.image.repository_name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8069
          env:
            - name: HOST
              value: {{ .Values.database.host }}
            - name: USER
              value: {{ .Values.database.user }}
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.client.name }}-secrets
                  key: db-password
          volumeMounts:
            - name: odoo-config
              mountPath: /etc/odoo/odoo.conf
              subPath: odoo.conf
            - name: odoo-data
              mountPath: /var/lib/odoo
          resources:
{{ toYaml .Values.resources | indent 10 }}
          securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
      volumes:
        - name: odoo-config
          configMap:
            name: odoo-config
        - name: odoo-data
          persistentVolumeClaim:
            claimName: odoo-pvc-{{ .Values.client.name }}
      securityContext:
{{ toYaml .Values.podSecurityContext | indent 8 }}
---
apiVersion: v1
kind: Service
metadata:
  name: odoo-service
  namespace: {{ .Values.client.namespace | default .Release.Namespace }}
spec:
  type: {{ .Values.service.type }}
  selector:
    app: odoo
    client: {{ .Values.client.name }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.targetPort }}
