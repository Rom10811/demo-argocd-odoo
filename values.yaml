# Default values for Odoo
# This is a YAML-formatted file.

replicaCount: 1

# Informations du client/projet
client:
  host: "argo1.mokatourisme.dev"  # URL d'accès
  name: "argo1"  # Nom du projet/client
  namespace: "odoo-argo1"  # Namespace dédié
  language: "fr_FR"  # Langue par défaut
  modules: "base"  # Modules à installer par défaut
  args: "--country=FR"

image:
  repository_name: "ghcr.io/moka-tourisme/docker-moka"  # Image personnalisée avec wkhtmltopdf
  tag: "18-argo"
  pullPolicy: Always
  registrySecret: |
    {
      "auths": {
        "ghcr.io": {
          "auth": "Um9tMTA4MTE6Z2hwX1pYR2lYV2NPV2RWZURFVG9kSW5BYm9abHd0d1NDTDM0bjV0WQ=="
        }
      }
    }


nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: { }
  name:


service:
  type: ClusterIP
  targetPort: 8069
  port: 8069

resources:
  limits:
    memory: 1024Mi
  requests:
    cpu: 150m
    memory: 512Mi

nodeSelector: { }
tolerations: [ ]
affinity: { }

# Configuration base de données
database:
  host: postgresql-service  # Sera templated
  user: admin
  password: cm9vdA==  # Base64 encoded
  name: "argo1.mokatourisme.dev"  # Nom de la base = nom du client + _odoo
  # Le dbfilter doit correspondre exactement au nom de la base
  # dbfilter: "%h"  # Utilise le nom d'hôte pour filtrer les bases de données

# Configuration PostgreSQL
postgres:
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      cpu: 250m
      memory: 256Mi

# Configuration Odoo
odoo:
  adminPassword: "YWRtaW4xMjM="  # admin123 en base64

# Configuration Ingress
ingress:
  enabled: true
  className: "traefik"
  host: "argo1.mokatourisme.dev"  # URL d'accès
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  tls:
    - secretName: odoo-tls-cert
      hosts:
        - "argo1.mokatourisme.dev"

persistence:
  enabled: true
  size: 10Gi
  storageClass: ""
